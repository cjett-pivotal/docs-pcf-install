---
title: Updating NSX-T Load Balancer Server Pool Membership
owner: Ops Manager
---



This topic describes how to update load balancer server pool membership
for Pivotal Cloud Foundry (PCF) deployments using NSX-T on vSphere. To update
this information, you must use the Ops Manager API.

See the [Ops Manager API documentation](https://docs.pivotal.io/pivotalcf/2-3/opsman-api) for more information about the API.

<p class="note"><strong>Note:</strong> This procedure requires NSX-T v2.2 or later.</p>


## <a id='authenticate'></a> Authenticate

To use the Ops Manager API, you must authenticate and retrieve a token from the Ops Manager User Account and Authentication (UAA) server. For instructions, see the [Using Ops Manager API](ops-man-api.html) topic.


## <a id='update'></a> Update Load Balancer Server Pool Membership

To update load balancer server pool membership, do the following:

1. [Create VM Extensions](#create)
2. [Stage and Associate VM Extensions](#stage)
3. [Apply Changes](#apply-changes)

### <a id='create'></a> Create VM Extensions

To create VM extensions, do the following:

1. Create a file named `web.json` and paste the following. This is the VM extension for the VMs that serve as the HTTP or HTTPS endpoint of the foundation. The BOSH instance group `router` serves as the HTTP or HTTPS endpoint.
	
	```json
	{
		"name": "pas_web_vm_extension",
		"cloud_properties": {
			"nsxt": {
				"lb": {
					"server_pools": [
						{
							"name": "pas-web-pool"
						}
					]
				}
			}
		}
	}
   ```

1. Create a file named `ssh.json` and paste the following. This is the VM extension for the VMs that serve as the SSH endpoint of the foundation. The BOSH instance group `diego_brain` serves as the SSH endpoint. On Small Footprint PAS
  the instance group is called `control`.
  
    ```json
	{
		"name": "pas_ssh_vm_extension",
		"cloud_properties": {
			"nsxt": {
				"lb": {
					"server_pools": [
						{
							"name": "pas-ssh-pool"
						}
					]
				}
			}
		}
	}
    ```

1. Create a file named `tcp.json`. This is the VM extension for the VMs that serve as the endpoint of apps that require custom TCP ports. The BOSH instance group `tcp_router` serves as the custom TCP port endpoint On Small Footprint PAS
  this instance group is not deployed by default.

    ```json
	{
		"name": "pas_tcp_vm_extension",
		"cloud_properties": {
			"nsxt": {
				"lb": {
					"server_pools": [
						{
							"name": "pas-tcp-pool"
						}
					]
				}
			}
		}
	}
    ```

### <a id='stage'></a> Stage and Associate VM Extensions

To stage and associate VM extensions with the load balancer, do the following:

1. Run the following command to stage the `web.json` VM extension:

	```
	curl "https://OPS-MAN-FQDN/api/v0/staged/vm_extensions" \
	-X POST \
	-H "Authorization: Bearer UAA-ACCESS-TOKEN" \
	-H "Content-Type: application/json" \
	-d "$(cat $VM_EXTENSION_FILE_PATH)"
	```
	Where:
	* `OPS-MAN-FQDN` is the fully qualified domain name of your Ops Manager installation.
	* `UAA-ACCESS-TOKEN` is the access token you retrieved when authenticating with the Ops Manager API. 
	* `VM_EXTENSION_FILE_PATH` is the path to the VM extension file.

1. Repeat the previous step for the `ssh.json` and `tcp.json` VM extensions. 

1. Run the following command to retrieve a list of staged products:

	```
	curl 'https://OPS-MAN-FQDN/api/v0/staged/products' \
	-H "Authorization: Bearer UAA-ACCESS-TOKEN"
	```

1. Record the GUID of the `cf` product. In the following example output, the GUID is `cf-01222ab1111111aaa1a`.
	<pre class="terminal">
		[
	   {
	      "product\_version" : "1.10.6.0",
	      "guid" : "p-bosh-dee11e111e1111ee1e1a",
	      "installation\_name" : "p-bosh",
	      "type" : "p-bosh"
	   },
	   {
	      "type" : "cf",
	      "product\_version" : "1.10.8-build.7",
	      "installation\_name" : "cf-01222ab1111111aaa1a",
	      "guid" : "cf-01222ab1111111aaa1a"
	   }
	]</pre>

1. Retrieve the list of jobs for `cf`:
	
	```
	curl https://OPS-MAN-FQDN/api/v0/staged/products/PRODUCT-GUID/jobs' \
	-H 'Authorization: Bearer UAA-ACCESS-TOKEN'
	```

1. Record the value of `guid` for the `router`, `tcp_router`, and `diego_brain` jobs. See the following example output:

	<pre class="terminal">
	{
   "jobs" : [
      {
      	 "name" : "router",
         "guid" : "router-9c37cf48ae7412f2afd1" 
      },
      {
         "name" : "tcp\_router",
         "guid" : "tcp\_router-6af18efdd18d198edee9"
      },
      {
         "name" : "diego\_brain",
         "guid" : "diego\_brain-b49b0b2aed247302c0e1"
      },
      ...
      </pre>

1. To associate your job with its appropriate VM extension, run the following command:<pre>
curl "https://OPS-MAN-FQDN/api/v0/staged/products/PRODUCT-GUID/jobs/JOB-GUID/resource_config" \
      -X PUT \
      -H "Content-Type: application/json" \
      -H "Authorization: Bearer UAA-ACCESS-TOKEN" \
      -d '{"instance\_type": {"id": "INSTANCE-TYPE"},
     "instances": INSTANCE-COUNT,
     "additional_vm_extensions": ["VM-EXTENSION-NAME"]
       }'</pre><p class="note warning"><strong>Warning:</strong> Do not use the resource config fields
   for <code>nsx_lbs</code> and <code>nsx_security_groups</code>. These fields are only for NSX-V.
   </p>

    Where:
      * `PRODUCT-GUID` is the GUID you recorded for the `cf` product.
      * `JOB-GUID` is the GUID you recorded for the `router` job.
      * `INSTANCE-TYPE` is the instance type for the job. For the default instance type, use `"automatic"`.
      * `INSTANCE-COUNT` is the number of instances for the job. The default number for each job is visible in the Resource Config section of the Ops Manager UI.
      * `VM-EXTENSION-NAME` is `pas_web_vm_extension`.



1. Run the previous command again.
   
    Where:
    - `JOB-GUID` is the GUID you recorded for the `tcp_router` job.
    - `VM-EXTENSION-NAME` is `pas_tcp_vm_extension`.

2. Run the previous command again.

    Where:
    - `JOB-GUID` is the GUID you recorded for the `diego_brain` job.
    - `VM-EXTENSION-NAME` is `pas_ssh_vm_extension`.

### <a id="apply-changes"></a> Apply Changes

To apply changes, do the following:

1. Log in to the Ops Manager Installation Dashboard.

1. Click **Review Pending Changes**, then **Apply Changes** to redeploy.
